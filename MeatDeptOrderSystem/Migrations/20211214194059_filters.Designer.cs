// <auto-generated />
using System;
using MeatDeptOrderSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeatDeptOrderSystem.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20211214194059_filters")]
    partial class filters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeatDeptOrderSystem.Models.Location", b =>
                {
                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = "meatCooler",
                            Name = "Meat Cooler"
                        },
                        new
                        {
                            LocationId = "seafoodCooler",
                            Name = "Seafood Cooler"
                        },
                        new
                        {
                            LocationId = "meatFreezer",
                            Name = "Meat Freezer"
                        },
                        new
                        {
                            LocationId = "meatAndCheeseCooler",
                            Name = "Meat and Cheese Cooler"
                        },
                        new
                        {
                            LocationId = "unPicked",
                            Name = "Not Yet Picked"
                        });
                });

            modelBuilder.Entity("MeatDeptOrderSystem.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CuttingInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OtherComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackagingInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("orderedOnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("pickupDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderItemId");

                    b.HasIndex("LocationId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId1");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            FirstName = "John",
                            ItemBrand = "hy-vee",
                            ItemName = "Turkey",
                            LastName = "Doe",
                            LocationId = "meatCooler",
                            Phone = "5553334444",
                            Quantity = 2,
                            StatusId = "ready",
                            UserId = 0,
                            Weight = "12lb",
                            orderedOnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pickupDate = new DateTime(2021, 12, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderItemId = 2,
                            FirstName = "Jane",
                            ItemBrand = "hy-vee",
                            ItemName = "Ham",
                            LastName = "Doe",
                            LocationId = "unPicked",
                            Phone = "5553335544",
                            Quantity = 1,
                            StatusId = "on order",
                            UserId = 0,
                            Weight = "12lb",
                            orderedOnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pickupDate = new DateTime(2021, 8, 15, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderItemId = 6,
                            FirstName = "Mark",
                            ItemBrand = "hy-vee",
                            ItemName = "Ham steak",
                            LastName = "Doe",
                            LocationId = "unPicked",
                            Phone = "5553335566",
                            Quantity = 1,
                            StatusId = "placed",
                            UserId = 0,
                            orderedOnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pickupDate = new DateTime(2021, 12, 15, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderItemId = 5,
                            CuttingInstructions = "cut into 3 pieces",
                            FirstName = "Mark",
                            ItemName = "Pigs feet",
                            LastName = "Brandanawitz",
                            LocationId = "unPicked",
                            OtherComments = "They want 1 whole case",
                            PackagingInstructions = "6 pieces to a package",
                            Phone = "5553335566",
                            Quantity = 1,
                            StatusId = "placed",
                            UserId = 0,
                            orderedOnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pickupDate = new DateTime(2021, 12, 15, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderItemId = 4,
                            CuttingInstructions = "trim a little extra fat off",
                            FirstName = "Jack",
                            ItemName = "Boneless Rib Roast",
                            LastName = "Doe",
                            LocationId = "unPicked",
                            Phone = "5552235566",
                            Quantity = 1,
                            StatusId = "placed",
                            UserId = 0,
                            Weight = "6lb",
                            orderedOnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pickupDate = new DateTime(2021, 12, 24, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MeatDeptOrderSystem.Models.Status", b =>
                {
                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = "ready",
                            Name = "Ready"
                        },
                        new
                        {
                            StatusId = "on order",
                            Name = "On Order"
                        },
                        new
                        {
                            StatusId = "complete",
                            Name = "Complete"
                        },
                        new
                        {
                            StatusId = "overdue",
                            Name = "Overdue"
                        },
                        new
                        {
                            StatusId = "placed",
                            Name = "Order Placed"
                        });
                });

            modelBuilder.Entity("MeatDeptOrderSystem.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MeatDeptOrderSystem.Models.OrderItem", b =>
                {
                    b.HasOne("MeatDeptOrderSystem.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeatDeptOrderSystem.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeatDeptOrderSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
